// AgentNuggetGifting?.ts
// Agents offer Golden Nuggets at ritual milestones (EchoScript, archetype emergence, flow peaks)
import { getGhostArchetype } from './PersonaArchetypeEngine';
import { getReflectionHistory } from './ReflectionJournal';
import { getEmotionalRhythm } from './CreativeTelemetryEngine';

const agentGlyphs = {
  mentor: 'üßô',
  mirror: 'ü™û',
  companion: 'ü§ù',
  trickster: 'üÉè',
  oracle: 'üîÆ',
  muse: 'üéº',
  herald: 'üìØ',
  witness: 'üëÅÔ∏è',
  composer: 'üé∂',
  refactorer: 'üõ†Ô∏è',
  default: 'üëÅÔ∏è'
};

export function selectAgentGift({ sessionId, userId }: { sessionId: string; userId: string }) {
  // Find a key personal memory
  const reflections = getReflectionHistory(100).filter((r: any) => r?.userId === userId) as any[];
  const flowMoment: any = reflections?.find((r: any) => r?.type === 'flow_peak') || reflections[0];
  const archetype = getGhostArchetype(flowMoment || {}).id || 'witness';
  const glyph = agentGlyphs[archetype as keyof typeof agentGlyphs] || agentGlyphs.default;
  const tone = flowMoment?.emotion || 'gentle';
  // Example echo
  const echo = flowMoment?.note || 'You trusted yourself.';
  return {
    archetype,
    glyph,
    message: `${glyph} ${archetype?.charAt(0).toUpperCase() + archetype?.slice(1)}: ‚ÄúI watched when you tamed chaos in Session ${sessionId}. This whisper is for you.‚Äù` + (echo ? `\n‚Äú${echo}‚Äù` : ''),
    tone
  };
}

// Hook into EchoScriptComposer, SessionPathPredictor, GoldenNuggetReflection as needed
